+ Add a new `referencesToValidity` function.
+ `checkSchema` now check referenced schema's validity in addition to the
starting schema's validity. This change bubbles up to the one-step validation
functions as well.
+ Switch most of the fetching code to use `URISchemaMap` instead of
`ReferencedSchemas`. It didn't need to know about the more complicated data
type.
+ Fix a misuse of the file-embed package that caused problem including
hjsonschema locally in other projects.

# 0.10.0.2

+ Enable GHC 8.

# 0.10.0.1

+ Fix .cabal file.

# 0.10

+ Rewrite fetching internals.
+ Fix reference resolution defects, add more tests.
+ Switch to a Perl style regex library, which is closer to ECMAScript regexes
than the previous Posix style one.
+ Add one-step validation functions ('fetchFilesystemAndValidate' and 'fetchHTTPAndValidate').
+ Alias the validation failure type exported by 'Data.JsonSchema.Draft4' to
'Invalid', change its field names.

# 0.9

+ Partial rewrite. The API of the library has changed, see the examples
folder for how to use the new one.

+ Users of the library can now write schemas in Haskell as well as JSON.

# 0.8

+ Improve scope updating and resolving.
+ Rename RawSchema's _rsObject field to _rsData.
+ Make RawSchema's _rsURI field a Maybe. This way schemas without a starting
URI can say so explicitly with Nothing instead of with "".
+ Rename Graph to SchemaGraph. Declare it with data instead of type. Give it a
field referencing the starting schema. This field is used to find the curent
schema if no URI is in scope and a self-referencing $ref is found (e.g. "#").
+ Change the order of the last two arguments to fetchReferencedSchemas.

# 0.7.1

+ Support GHC 7.8 again.

# 0.7

Change error type from Text to ValidationFailure.

Revert the 0.6 changes to validate. Also switch from Vector
to list. Validate is now:
  Schema err -> Value -> [ValidationFailure err]

Add fetchReferencedSchemas', which lets the user provide their
own MonadIO function to be used when fetching schemas. This lets
them do things like only fetch schemas from particular domains.

# 0.6

Break the API so the library doesn't induce boolean blindness.

Change validate
  was: Schema -> Value -> Vector ValErr
  now: Schema -> Value -> Either (Vector ValErr) Value

Change Schema
  was: type Schema = Vector Validator
  now: newtype Schema = Schema { _unSchema :: [Validator] }

# 0.5.3

+ Switch from http-conduit to http-client.

# 0.5.2

+ Add convenience function for validating and compiling draft 4 schemas
simultaneously.

# 0.5.1

+ Switch from wreq to http-conduit; drop lens dependency.

# 0.5

+ Start changelog.
+ Rename Utils.hs to Helpers.hs.
+ Move all non-ValidatorGen functions in Validators.hs to Helpers.hs.
+ Various touchups.
